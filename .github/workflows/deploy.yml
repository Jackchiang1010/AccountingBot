name: Deploy to EC2

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: |
        cd AccountBot
        mkdir -p ~/.ssh
        mvn clean package -DskipTests

    - name: Add both EC2 instances to known_hosts
      run: |
        cd AccountBot
        ssh-keyscan -H ec2-54-248-138-109.ap-northeast-1.compute.amazonaws.com >> ~/.ssh/known_hosts
        ssh-keyscan -H ec2-54-65-194-170.ap-northeast-1.compute.amazonaws.com >> ~/.ssh/known_hosts

    - name: Deploy to EC2-1
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        cd AccountBot
        echo "${PRIVATE_KEY}" > private_key.pem
        chmod 600 private_key.pem

        # SCP the JAR file to the first EC2
        scp -o StrictHostKeyChecking=no -i private_key.pem target/AccountBot-0.0.1-SNAPSHOT.jar ubuntu@ec2-54-248-138-109.ap-northeast-1.compute.amazonaws.com:~

        # SSH to the first EC2 and run deployment commands
        ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@ec2-54-248-138-109.ap-northeast-1.compute.amazonaws.com << 'EOF'
          export MYSQL_PASSWORD=${MYSQL_PASSWORD}
          export OPENAI_API_KEY=${OPENAI_API_KEY}

          PORT=8080
          PID=$(lsof -ti:$PORT)
          if [ -n "$PID" ]; then
            kill -9 $PID
          fi
          rm -f app.log
          sudo systemctl start linebot
        EOF

    - name: Deploy to EC2-2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        cd AccountBot
        echo "${PRIVATE_KEY}" > private_key.pem
        chmod 600 private_key.pem

        # SCP the JAR file to the second EC2
        scp -o StrictHostKeyChecking=no -i private_key.pem target/AccountBot-0.0.1-SNAPSHOT.jar ubuntu@ec2-54-65-194-170.ap-northeast-1.compute.amazonaws.com:~

        # SSH to the second EC2 and run deployment commands
        ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@ec2-54-65-194-170.ap-northeast-1.compute.amazonaws.com << 'EOF'
          export MYSQL_PASSWORD=${MYSQL_PASSWORD}
          export OPENAI_API_KEY=${OPENAI_API_KEY}

          PORT=8080
          PID=$(lsof -ti:$PORT)
          if [ -n "$PID" ]; then
            kill -9 $PID
          fi
          rm -f app.log
          sudo systemctl start linebot
        EOF
